<!DOCTYPE html>
<html lang="fr">
<head>
    <title>CallFix</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        /* Animation du titre principal */
        @keyframes logoPulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.02); }
            100% { transform: scale(1); }
        }
        
        @keyframes borderGlow {
            0% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }
            100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0); }
        }
        
        .logo-pulse {
            animation: logoPulse 3s infinite;
            position: relative;
        }
        
        .logo-pulse::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, rgba(59, 130, 246, 0), rgba(59, 130, 246, 0.8) 50%, rgba(59, 130, 246, 0));
            bottom: -4px;
            left: 0;
            transform-origin: bottom;
            transform: scaleX(0.8);
            opacity: 0.7;
            animation: logoPulse 3s infinite alternate;
        }
        
        /* Animations générales */
        .autocomplete-list {
            display: none;
            position: absolute;
            width: 100%;
            background: white;
            border: 1px solid #e2e8f0;
            border-top: none;
            border-radius: 0 0 0.375rem 0.375rem;
            max-height: 200px;
            overflow-y: auto;
            z-index: 1000;
        }
        .dark .autocomplete-list { background: #1f2937; border-color: #374151; }
        .autocomplete-list.show { display: block; }
        .autocomplete-item { padding: 0.5rem 1rem; cursor: pointer; }
        .autocomplete-item:hover { background-color: #f3f4f6; }
        .dark .autocomplete-item:hover { background-color: #374151; }
        .autocomplete-item.selected { background-color: #e5e7eb; }
        .dark .autocomplete-item.selected { background-color: #4b5563; }
        
        /* Transitions et animations */
        *, ::before, ::after { 
            transition: background-color 0.2s, border-color 0.2s, color 0.2s, transform 0.2s, box-shadow 0.2s; 
        }
        
        /* Menu déconnexion */
        .user-info {
            position: relative;
        }
        
        .logout-menu {
            position: absolute;
            right: 0;
            top: 100%;
            margin-top: 8px;
            background: white;
            border-radius: 0.375rem;
            padding: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06);
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: opacity 0.2s, transform 0.2s, visibility 0.2s;
            z-index: 50;
        }
        
        .dark .logout-menu {
            background: #1f2937;
            box-shadow: 0 4px 6px -1px rgba(0,0,0,0.2), 0 2px 4px -1px rgba(0,0,0,0.1);
        }
        
        .user-info:hover .logout-menu {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }
        
        /* Animations de ticket */
        .ticket-card {
            border-left: 4px solid #e5e7eb;
            animation: fadeIn 0.4s ease-out forwards;
        }
        .ticket-card.blocking { border-left-color: #ef4444; }
        .ticket-card.glpi { border-left-color: #8b5cf6; }
        
        /* Animations diverses */
        @keyframes fadeIn { from {opacity:0;transform:translateY(-8px)} to {opacity:1;transform:translateY(0)} }
        @keyframes fadeOut { from {opacity:1;transform:translateY(0)} to {opacity:0;transform:translateY(8px)} }
    </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 min-h-screen">
    <div class="container mx-auto px-4 py-6">
        <!-- Header avec animation du titre et déconnexion -->
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white logo-pulse">CallFix</h1>
            <div class="flex items-center gap-3">
                <a href="/archives" class="text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200 flex items-center gap-2 px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4" />
                    </svg>
                    <span>Archives</span>
                </a>
                
                <!-- Bouton Générer un Rapport -->
                <a href="/report" class="text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200 flex items-center gap-2 px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                    <span>Générer un Rapport</span>
                </a>
                
                <a href="/stats" class="text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200 flex items-center gap-2 px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                    </svg>
                    <span>Statistiques</span>
                </a>
                
                <!-- User info avec menu déconnexion -->
                <div class="user-info relative px-3 py-2 rounded-full bg-gray-50 dark:bg-gray-800 flex items-center cursor-pointer">
                    <span class="text-gray-600 dark:text-gray-400 mr-2">
                        <span class="hidden md:inline">Connecté:</span> 
                        <strong class="dark:text-white"><%= username %></strong>
                    </span>
                    <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                    
                    <!-- Menu déconnexion -->
                    <div class="logout-menu">
                        <a href="/logout" class="text-red-500 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 flex items-center gap-2 px-4 py-2 rounded hover:bg-gray-100 dark:hover:bg-gray-800">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                            </svg>
                            Déconnexion
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Formulaire nouvel appel -->
        <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md mb-6">
            <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-white flex items-center">
                <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Nouvel Appel
            </h2>
            <form action="/api/tickets" method="POST" class="space-y-4">
                <div class="flex items-center gap-4 mb-4">
                    <div class="flex items-center gap-2">
                        <input type="checkbox" id="isGLPI" name="isGLPI" value="true" class="rounded" onchange="toggleGLPIFields(this)">
                        <label for="isGLPI" class="text-gray-700 dark:text-gray-300">Ticket GLPI</label>
                    </div>
                    <div class="flex items-center gap-2">
                        <input type="checkbox" id="isBlocking" name="isBlocking" value="true" class="rounded">
                        <label for="isBlocking" class="text-red-600 dark:text-red-400 font-medium">Bloquant</label>
                    </div>
                </div>
                                <!-- Champ appelant -->
                                <div>
                                    <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Appelant</label>
                                    <input type="text" name="caller" required list="callers" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-2 focus:ring-blue-500">
                                    <datalist id="callers">
                                        <% savedFields.callers.forEach(caller => { %>
                                            <option value="<%= caller %>">
                                        <% }) %>
                                    </datalist>
                                </div>
                
                                <!-- Champs spécifiques non-GLPI -->
                                <div class="non-glpi-field">
                                    <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Raison</label>
                                    <input type="text" name="reason" list="reasons" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-2 focus:ring-blue-500">
                                    <datalist id="reasons">
                                        <% savedFields.reasons.forEach(reason => { %>
                                            <option value="<%= reason %>">
                                        <% }) %>
                                    </datalist>
                                </div>
                
                                <div class="non-glpi-field">
                                    <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Tags</label>
                                    <input type="text" name="tags" placeholder="Séparez les tags par des virgules" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-2 focus:ring-blue-500" list="tags">
                                    <datalist id="tags">
                                       <% savedFields.tags.forEach(tag => { %>
                                          <option value="<%= tag %>">
                                       <% }) %>
                                    </datalist>
                                </div>
                
                                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 transition-all duration-300 hover:shadow-lg flex items-center gap-2">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                    </svg>
                                    <span>Créer l'Appel</span>
                                </button>
                            </form>
                            
                            <!-- Sections des champs mémorisés (réduit) -->
                            <div class="mt-6">
                                <button onclick="toggleSavedFields()" class="flex items-center gap-2 text-gray-600 dark:text-gray-400 mb-3 hover:text-gray-800 dark:hover:text-gray-200">
                                    <svg id="savedFieldsIcon" class="w-5 h-5 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                    </svg>
                                    <span id="savedFieldsButtonText">Afficher les champs mémorisés</span>
                                </button>
                                
                                <div id="savedFieldsSection" class="hidden space-y-5 opacity-0 transform -translate-y-4 transition-all duration-300">
                                    <% ['callers', 'reasons', 'tags'].forEach((fieldType, i) => { %>
                                        <div>
                                            <h4 class="font-medium mb-2 text-gray-700 dark:text-gray-300">
                                                <%= fieldType === 'callers' ? 'Appelants' : fieldType === 'reasons' ? 'Raisons' : 'Tags' %> mémorisés
                                            </h4>
                                            <div class="flex flex-wrap gap-2">
                                                <% savedFields[fieldType].forEach(value => { %>
                                                    <div class="inline-flex items-center bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded hover:bg-gray-200 dark:hover:bg-gray-600">
                                                        <span class="text-gray-800 dark:text-gray-200"><%= value %></span>
                                                        <form action="/api/saved-fields/delete" method="POST" class="ml-2">
                                                            <input type="hidden" name="field" value="<%= fieldType === 'callers' ? 'caller' : fieldType === 'reasons' ? 'reason' : 'tag' %>">
                                                            <input type="hidden" name="value" value="<%= value %>">
                                                            <button type="submit" class="text-red-500 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300">×</button>
                                                        </form>
                                                    </div>
                                                <% }) %>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Liste des tickets -->
                        <div class="space-y-4">
                            <% tickets.forEach((ticket, index) => { %>
                                <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md ticket-card <%= ticket.isBlocking ? 'blocking' : '' %> <%= ticket.isGLPI ? 'glpi' : '' %>" 
                                    data-ticket-id="<%= ticket.id %>"
                                    style="animation-delay: <%= 0.1 * (index + 1) %>s">
                                    <div class="flex justify-between items-start flex-wrap md:flex-nowrap gap-4">
                                        <div>
                                            <div class="flex items-center gap-2 flex-wrap">
                                                <h3 class="font-semibold text-gray-900 dark:text-white"><%= ticket.caller %></h3>
                                                <% if (ticket.isGLPI) { %>
                                                    <span class="bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200 text-xs px-2 py-1 rounded-full">GLPI</span>
                                                <% } %>
                                                <% if (ticket.isBlocking) { %>
                                                    <span class="bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 text-xs px-2 py-1 rounded-full">Bloquant</span>
                                                <% } %>
                                            </div>
                                            <% if (!ticket.isGLPI) { %>
                                                <p class="text-gray-600 dark:text-gray-400 mt-1"><%= ticket.reason %></p>
                                                <div class="flex flex-wrap gap-2 mt-2">
                                                    <% ticket.tags.forEach(tag => { %>
                                                        <span class="bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 px-2 py-1 rounded-full text-sm">
                                                            <%= tag %>
                                                        </span>
                                                    <% }) %>
                                                </div>
                                            <% } %>
                                            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">
                                                Créé le <%= new Date(ticket.createdAt).toLocaleString('fr-FR', {
                                                    year: 'numeric', month: 'long', day: 'numeric', 
                                                    hour: '2-digit', minute: '2-digit'
                                                }) %>
                                                par <%= ticket.createdBy %>
                                                <% if (ticket.lastModifiedBy) { %>
                                                    <br>Modifié le <%= new Date(ticket.lastModifiedAt).toLocaleString('fr-FR', {
                                                        year: 'numeric', month: 'long', day: 'numeric', 
                                                        hour: '2-digit', minute: '2-digit'
                                                    }) %>
                                                    par <%= ticket.lastModifiedBy %>
                                                <% } %>
                                            </p>
                                        </div>
                                        <div class="flex gap-2 flex-wrap md:flex-nowrap">
                                            <button onclick="archiveTicket('<%= ticket.id %>')" class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 dark:bg-yellow-600 dark:hover:bg-yellow-700 transition-all hover:shadow-md">
                                                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4" />
                                                </svg>
                                                Archiver
                                            </button>
                                            <% if (!ticket.isGLPI) { %>
                                                <a href="/ticket/<%= ticket.id %>" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 transition-all hover:shadow-md">
                                                    <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                                    </svg>
                                                    Détails
                                                </a>
                                            <% } %>
                                            <a href="/ticket/<%= ticket.id %>/edit" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 dark:bg-green-600 dark:hover:bg-green-700 transition-all hover:shadow-md">
                                                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                                </svg>
                                                Modifier
                                            </a>
                                            <form action="/api/tickets/<%= ticket.id %>/delete" method="POST" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce ticket ?')" class="inline">
                                                <button type="submit" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 dark:bg-red-600 dark:hover:bg-red-700 transition-all hover:shadow-md">
                                                    <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                    </svg>
                                                    Supprimer
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            <% }) %>
                
                            <% if (tickets.length === 0) { %>
                                <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md text-center">
                                    <p class="text-gray-600 dark:text-gray-300">Aucun appel en cours.</p>
                                </div>
                            <% } %>
                        </div>
                        
                        <!-- Page Génération de rapport -->
                        <div id="reportSection" class="mt-8 bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md hidden">
                            <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-white flex items-center">
                                <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                </svg>
                                Générer un Rapport
                            </h2>
                            
                            <form action="/api/report/generate" method="POST" class="space-y-4">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Date de début</label>
                                        <input type="date" name="startDate" required class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Date de fin</label>
                                        <input type="date" name="endDate" required class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                                    </div>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Type de rapport</label>
                                    <select name="reportType" class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                                        <option value="all">Tous les appels</option>
                                        <option value="glpi">Tickets GLPI seulement</option>
                                        <option value="nonGlpi">Tickets non-GLPI seulement</option>
                                        <option value="blocking">Tickets bloquants seulement</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Format</label>
                                    <div class="flex gap-4">
                                        <label class="inline-flex items-center">
                                            <input type="radio" name="format" value="pdf" checked class="form-radio text-blue-500">
                                            <span class="ml-2 text-gray-700 dark:text-gray-300">PDF</span>
                                        </label>
                                        <label class="inline-flex items-center">
                                            <input type="radio" name="format" value="excel" class="form-radio text-green-500">
                                            <span class="ml-2 text-gray-700 dark:text-gray-300">Excel</span>
                                        </label>
                                        <label class="inline-flex items-center">
                                            <input type="radio" name="format" value="csv" class="form-radio text-yellow-500">
                                            <span class="ml-2 text-gray-700 dark:text-gray-300">CSV</span>
                                        </label>
                                    </div>
                                </div>
                                
                                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 transition-all hover:shadow-lg flex items-center gap-2">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                                    </svg>
                                    <span>Télécharger le rapport</span>
                                </button>
                            </form>
                        </div>
                    </div>
                
                    <!-- Bouton de thème -->
                    <button id="theme-toggle" class="fixed bottom-4 right-4 p-3 bg-white dark:bg-gray-800 rounded-full shadow-lg z-10 hover:shadow-xl transition-all duration-300">
                        <svg id="sun-icon" class="w-6 h-6 text-yellow-500 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                        </svg>
                        <svg id="moon-icon" class="w-6 h-6 text-gray-700 block dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                        </svg>
                    </button>
                
                    <!-- Feedback pour le thème -->
                    <div id="theme-feedback" class="fixed top-4 right-4 bg-white dark:bg-gray-800 py-2 px-4 rounded-md shadow-lg transition-opacity duration-500 opacity-0 pointer-events-none z-50">
                        <span id="theme-message" class="text-gray-900 dark:text-white"></span>
                    </div>
                
                    <script>
                        // Fonctions utilitaires
                        const $ = id => document.getElementById(id);
                        
                        // Gestionnaire de thème
                        function initTheme() {
                            const darkMode = localStorage.getItem('theme') === 'dark' || 
                                          (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches);
                            
                            document.documentElement.classList.toggle('dark', darkMode);
                            
                            $('theme-toggle')?.addEventListener('click', () => {
                                const isDark = document.documentElement.classList.toggle('dark');
                                localStorage.setItem('theme', isDark ? 'dark' : 'light');
                                
                                // Afficher le feedback
                                const feedback = $('theme-feedback');
                                const messageEl = $('theme-message');
                                
                                if (feedback && messageEl) {
                                    messageEl.textContent = isDark ? 'Mode sombre activé' : 'Mode clair activé';
                                    feedback.classList.remove('opacity-0');
                                    
                                    setTimeout(() => feedback.classList.add('opacity-0'), 2000);
                                }
                            });
                        }
                        
                        // Toggle des champs mémorisés
                        function toggleSavedFields() {
                            const section = $('savedFieldsSection');
                            const icon = $('savedFieldsIcon');
                            const buttonText = $('savedFieldsButtonText');
                            
                            if (section) {
                                if (section.classList.contains('hidden')) {
                                    section.classList.remove('hidden');
                                    setTimeout(() => {
                                        section.classList.remove('opacity-0', '-translate-y-4');
                                    }, 10);
                                    icon.style.transform = 'rotate(180deg)';
                                    buttonText.textContent = 'Masquer les champs mémorisés';
                                } else {
                                    section.classList.add('opacity-0', '-translate-y-4');
                                    setTimeout(() => {
                                        section.classList.add('hidden');
                                    }, 300);
                                    icon.style.transform = 'rotate(0deg)';
                                    buttonText.textContent = 'Afficher les champs mémorisés';
                                }
                            }
                        }
                        
                        // Gestion des champs GLPI
                        function toggleGLPIFields(checkbox) {
                            document.querySelectorAll('.non-glpi-field').forEach(field => {
                                field.style.opacity = checkbox.checked ? '0.5' : '1';
                                field.style.pointerEvents = checkbox.checked ? 'none' : 'auto';
                                
                                const inputs = field.querySelectorAll('input');
                                inputs.forEach(input => {
                                    checkbox.checked ? input.removeAttribute('required') : 
                                                      (input.name === 'reason' ? input.setAttribute('required', '') : null);
                                });
                            });
                        }
                        
                        // Archivage d'un ticket avec animation
                        function archiveTicket(id) {
                            if (!confirm('Voulez-vous archiver cet appel ?')) return;
                            
                            fetch(`/api/tickets/${id}/archive`, {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' }
                            })
                            .then(response => {
                                if (response.ok) {
                                    const ticketElement = document.querySelector(`[data-ticket-id="${id}"]`);
                                    if (ticketElement) {
                                        ticketElement.style.opacity = '0';
                                        ticketElement.style.transform = 'translateX(100px)';
                                        setTimeout(() => {
                                            ticketElement.remove();
                                            if (document.querySelectorAll('.ticket-card').length === 0) {
                                                location.reload();
                                            }
                                        }, 500);
                                    }
                                } else {
                                    alert("Une erreur est survenue lors de l'archivage du ticket.");
                                }
                            })
                            .catch(error => {
                                console.error('Erreur:', error);
                                alert("Une erreur est survenue lors de l'archivage du ticket.");
                            });
                        }
                        
                        // Afficher/masquer la section de rapport
                        function showReportSection() {
                            const reportSection = $('reportSection');
                            if (reportSection) {
                                reportSection.classList.remove('hidden');
                                setTimeout(() => {
                                    reportSection.classList.add('opacity-100');
                                    reportSection.scrollIntoView({ behavior: 'smooth' });
                                }, 10);
                            }
                        }
                        
                        // Initialiser les fonctionnalités
                        document.addEventListener('DOMContentLoaded', () => {
                            initTheme();
                            
                            // Gérer les liens du menu
                            document.querySelectorAll('a[href="/report"]').forEach(link => {
                                link.addEventListener('click', (e) => {
                                    e.preventDefault();
                                    showReportSection();
                                });
                            });
                        });
                    </script>
                </body>
                </html>
                
