<!DOCTYPE html>
<html class="dark:bg-gray-900">
<head>
    <title>Login - CallFix</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
   
    <!-- Initialisation du thème -->
    <script>
        // Synchroniser le thème au chargement de la page
        const theme = localStorage.getItem('color-theme');
        if (theme === 'dark' || (!theme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark');
        }
    </script>

    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
       
        @keyframes slideInUp {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
       
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
       
        .page-fade-in {
            animation: fadeIn 0.8s ease-out forwards;
        }
       
        .form-slide-up {
            animation: slideInUp 0.6s ease-out;
            animation-delay: 0.3s;
            opacity: 0;
            animation-fill-mode: forwards;
        }
       
        /* Styles autocompletion */
        .autocomplete-list {
            display: none;
            position: absolute;
            width: 100%;
            background: white;
            border: 1px solid #e2e8f0;
            border-top: none;
            border-radius: 0 0 0.375rem 0.375rem;
            max-height: 200px;
            overflow-y: auto;
            z-index: 1000;
            animation: slideInUp 0.3s ease-out;
        }

        /* CORRECTION du mode sombre - utilisation de html.dark au lieu de .dark */
        html.dark .autocomplete-list {
            background: #1f2937;
            border-color: #374151;
            color: white;
        }

        .autocomplete-list.show {
            display: block;
        }

        .autocomplete-item {
            padding: 0.5rem 1rem;
            cursor: pointer;
            color: #1f2937;
            transition: all 0.2s ease;
        }

        html.dark .autocomplete-item {
            color: #f3f4f6;
        }

        .autocomplete-item:hover {
            background-color: #f3f4f6;
            transform: translateX(5px);
        }

        html.dark .autocomplete-item:hover {
            background-color: #374151;
        }

        .autocomplete-item.selected {
            background-color: #e5e7eb;
        }

        html.dark .autocomplete-item.selected {
            background-color: #4b5563;
        }

        /* Transition du thème */
        * {
            transition: background-color 0.5s ease, border-color 0.5s ease, color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
        }
       
        .input-focus-effect:focus {
            transform: scale(1.02);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
        }
       
        .link-hover-effect {
            position: relative;
        }
       
        .link-hover-effect::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -2px;
            left: 0;
            background-color: currentColor;
            transition: width 0.3s ease;
        }
       
        .link-hover-effect:hover::after {
            width: 100%;
        }
       
        /* Logo animation */
        .logo-text {
            background: linear-gradient(45deg, #3b82f6, #60a5fa, #93c5fd, #3b82f6);
            background-size: 300% 300%;
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: gradientFlow 5s ease infinite;
        }
       
        @keyframes gradientFlow {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
       
        /* SVG icon animations */
        .svg-icon {
            transition: transform 0.3s;
        }
       
        .svg-container:hover .svg-icon {
            transform: translateY(-3px) rotate(5deg);
        }
       
        /* Bouton de thème flottant */
        #theme-toggle {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 1000;
            background-color: #f3f4f6;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.3s ease;
        }
       
        html.dark #theme-toggle {
            background-color: #374151;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }
       
        #theme-toggle:hover {
            transform: scale(1.1);
        }
       
        #light-icon, #dark-icon {
            position: absolute;
            transition: opacity 0.3s ease, transform 0.5s ease;
        }
       
        html.dark #light-icon {
            opacity: 0;
            transform: rotate(100deg);
        }
       
        html.dark #dark-icon {
            opacity: 1;
            transform: rotate(0);
        }
       
        #dark-icon {
            opacity: 0;
            transform: rotate(-100deg);
        }
       
        /* Animation des badges de version */
        .version-badge {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            transition: transform 0.3s ease, color 0.3s ease;
            margin-right: 12px;
        }
       
        .version-badge:hover {
            transform: translateY(-2px);
            color: #3b82f6;
        }
       
        html.dark .version-badge:hover {
            color: #60a5fa;
        }
       
        /* Animation de la section développeur */
        .developer-section {
            animation: fadeIn 0.8s ease-out;
            animation-delay: 0.6s;
            opacity: 0;
            animation-fill-mode: forwards;
        }
    </style>
</head>

<body class="bg-gray-100 dark:bg-gray-900 min-h-screen page-fade-in">
    <div class="min-h-screen flex items-center justify-center p-4">
        <div class="max-w-md w-full">
            <div class="bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md form-slide-up">
                <h1 class="text-2xl font-bold mb-6 text-center text-gray-900 dark:text-white logo-text">CallFix</h1>
               
                <form action="/login" method="POST" class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300">Votre nom</label>
                        <div class="relative">
                            <input type="text"
                                   name="username"
                                   required
                                   placeholder="Entrez votre nom"
                                   class="w-full p-2 border rounded
                                          text-gray-900 dark:text-white
                                          bg-white dark:bg-gray-700
                                          border-gray-300 dark:border-gray-600
                                          focus:border-blue-500 dark:focus:border-blue-400
                                          focus:ring-1 focus:ring-blue-500 dark:focus:ring-blue-400
                                          placeholder-gray-400 dark:placeholder-gray-500
                                          input-focus-effect"
                                   list="usernames">
                            <datalist id="usernames">
                                <% savedUsers.forEach(user => { %>
                                    <option value="<%= user %>">
                                <% }) %>
                            </datalist>
                        </div>
                    </div>

                    <button type="submit"
                            class="w-full bg-blue-500 text-white px-4 py-2 rounded
                                   hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700
                                   focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
                                   dark:focus:ring-offset-gray-800
                                   transform transition-transform hover:scale-[1.02] active:scale-[0.98]">
                        Se connecter
                    </button>
                </form>

                <div class="mt-4 flex justify-center space-x-4">
                    <!-- Lien "Voir les statistiques" -->
                    <a href="/stats"
                       class="text-blue-500 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300
                              flex items-center justify-center gap-2 group link-hover-effect">
                        <div class="svg-container">
                            <svg class="w-4 h-4 svg-icon"
                                 fill="none"
                                 stroke="currentColor"
                                 viewBox="0 0 24 24">
                                <path stroke-linecap="round"
                                      stroke-linejoin="round"
                                      stroke-width="2"
                                      d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                            </svg>
                        </div>
                        <span>Voir les statistiques</span>
                    </a>
               
                    <!-- Bouton "Générer un Rapport" -->
                    <a href="/report"
                       class="text-blue-500 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300
                              flex items-center justify-center gap-2 group link-hover-effect">
                        <div class="svg-container">
                            <svg class="w-4 h-4 svg-icon"
                                 fill="none"
                                 stroke="currentColor"
                                 viewBox="0 0 24 24">
                                <path stroke-linecap="round"
                                      stroke-linejoin="round"
                                      stroke-width="2"
                                      d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                            </svg>
                        </div>
                        <span>Générer un Rapport</span>
                    </a>
                </div>

                <!-- Section développeur avec version, nom et GitHub -->
                <div class="mt-6 pt-4 border-t border-gray-200 dark:border-gray-700 text-gray-600 dark:text-gray-400 text-xs flex flex-wrap justify-center items-center gap-4 developer-section">
                    <div class="version-badge">
                        <svg class="w-4 h-4 mr-1 svg-icon" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zm7-10a1 1 0 01.707.293l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 8l-3.293-3.293A1 1 0 0112 4z" clip-rule="evenodd"></path>
                        </svg>
                        <span>Version 1.0.9</span>
                    </div>
                    
                    <div class="version-badge">
                        <svg class="w-4 h-4 mr-1 svg-icon" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                        </svg>
                        <span>Développé par <span class="font-medium text-blue-500 dark:text-blue-400">Sault</span></span>
                    </div>
                    
                    <a href="https://github.com/DcSault" target="_blank" rel="noopener noreferrer" 
                       class="version-badge hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-200">
                        <svg class="w-4 h-4 mr-1 svg-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                        <span>GitHub</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Bouton de thème flottant -->
    <div id="theme-toggle" class="cursor-pointer">
        <svg id="light-icon" class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
        </svg>
        <svg id="dark-icon" class="w-5 h-5 text-blue-300" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
        </svg>
    </div>

    <!-- Script du gestionnaire de thème -->
    <script>
        // Gestionnaire de thème pour le bouton flottant
        document.getElementById('theme-toggle').addEventListener('click', function() {
            // Si le thème est défini comme sombre
            if (document.documentElement.classList.contains('dark')) {
                document.documentElement.classList.remove('dark');
                localStorage.setItem('color-theme', 'light');
            } else {
                document.documentElement.classList.add('dark');
                localStorage.setItem('color-theme', 'dark');
            }
        });
        
        // Classe d'autocomplétion
        class Autocomplete {
            constructor(input, items) {
                this.input = input;
                this.items = items;
                this.currentFocus = -1;
                this.setup();
            }

            setup() {
                this.list = document.createElement('div');
                this.list.classList.add('autocomplete-list');
                this.input.parentNode.appendChild(this.list);

                this.input.addEventListener('input', () => this.updateList());
                this.input.addEventListener('keydown', (e) => this.handleKeydown(e));
                document.addEventListener('click', (e) => {
                    if (!this.input.contains(e.target)) {
                        this.list.classList.remove('show');
                    }
                });
            }

            updateList() {
                const value = this.input.value.toLowerCase();
                this.currentFocus = -1;
                this.list.innerHTML = '';

                if (!value) {
                    this.list.classList.remove('show');
                    return;
                }

                const matchingItems = this.items.filter(item =>
                    item.toLowerCase().includes(value)
                );

                if (matchingItems.length) {
                    this.list.classList.add('show');
                    matchingItems.forEach(item => {
                        const div = document.createElement('div');
                        div.classList.add('autocomplete-item');
                        div.textContent = item;
                        div.addEventListener('click', () => {
                            this.input.value = item;
                            this.list.classList.remove('show');
                        });
                        this.list.appendChild(div);
                    });
                }
            }

            handleKeydown(e) {
                const items = this.list.getElementsByTagName('div');
                if (!items.length) return;

                if (e.key === 'ArrowDown') {
                    this.currentFocus++;
                    if (this.currentFocus >= items.length) this.currentFocus = 0;
                    this.setActive(items);
                } else if (e.key === 'ArrowUp') {
                    this.currentFocus--;
                    if (this.currentFocus < 0) this.currentFocus = items.length - 1;
                    this.setActive(items);
                } else if (e.key === 'Enter' && this.currentFocus > -1) {
                    e.preventDefault();
                    items[this.currentFocus].click();
                }
            }

            setActive(items) {
                Array.from(items).forEach(item => item.classList.remove('selected'));
                if (this.currentFocus > -1) {
                    items[this.currentFocus].classList.add('selected');
                }
            }
        }

        // Initialisation au chargement de la page
        window.onload = function() {
            const usernameInput = document.querySelector('input[name="username"]');
            new Autocomplete(usernameInput, <%- JSON.stringify(savedUsers) %>);

            // Redirection admin
            usernameInput.addEventListener('input', function() {
                if (this.value.toLowerCase() === 'admin') {
                    window.location.href = '/admin/create-ticket';
                }
            });
        };
    </script>
</body>
</html>
